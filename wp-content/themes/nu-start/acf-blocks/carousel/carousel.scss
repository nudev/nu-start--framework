//


%transition {
	transition: all 0.2s ease-in-out;
}


// ? padding-top is used to manually proportion images that fill a specific size
// ? <img> tags do not ever use this
// ? div.bgimage--container uses this, with ANY inner content absolutely positioned.
// ? for anything more complex than the bgimage case; essentially use a .content in its place
@mixin aspect-ratio($w, $h) {
	position: relative;

	&:before {
		display: block;
		content: "";
		width: 100%;
		padding-top: ($h / $w) * 100%;
	}
}

.material-icons-outlined,
.material-icons {
	font-family: "Material Icons";
	font-weight: normal;
	font-style: normal;
	font-size: 24px;
	/* Preferred icon size */
	display: inline-block;
	line-height: 1;
	text-transform: none;
	letter-spacing: normal;
	word-wrap: normal;
	white-space: nowrap;
	direction: ltr;

	/* Support for all WebKit browsers. */
	-webkit-font-smoothing: antialiased;
	/* Support for Safari and Chrome. */
	text-rendering: optimizeLegibility;

	/* Support for Firefox. */
	-moz-osx-font-smoothing: grayscale;

	/* Support for IE. */
	font-feature-settings: "liga";
}
@mixin boxshadow($depth: 1) {
	@if $depth==0 {
		box-shadow: 0 1px 3px rgba(0, 0, 0, 0), 0 1px 2px rgba(0, 0, 0, 0);
	}

	@if $depth==1 {
		box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
	} @else if $depth==2 {
		box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
	} @else if $depth==3 {
		box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19),
			0 6px 6px rgba(0, 0, 0, 0.23);
	} @else if $depth==4 {
		box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),
			0 10px 10px rgba(0, 0, 0, 0.22);
	} @else if $depth==5 {
		box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3),
			0 15px 12px rgba(0, 0, 0, 0.22);
	}
}

// ? useful base margins based off 1em presumably
$base-margin: 16px;
$margin_2x: $base-margin * 2;
$margin_4x: $base-margin * 4;
$margin_6x: $base-margin * 6;
$margin_8x: $base-margin * 8;

$white: #fff;
$grey_1: #fafafa;
$grey_2: #f5f5f5;
$grey_3: #eeeeee;
$grey_4: #e0e0e0;
$grey_5: #bdbdbd;
$grey_6: #9e9e9e;
$grey_7: #757575;
$grey_8: #616161;
$grey_9: #424242;
$grey_10: #212121;
$black: #000;
$red: #d41b2c;


// within any carousel block
.nu__carousel {




	.js__carousel {
		// remain hidden before initialized
		transition: opacity 1s ease;
		visibility: hidden;
		opacity: 0;
		// fade in when fully initialized
		&.slick-initialized {
			background: none;
			visibility: visible;
			opacity: 1;
		}


		// 
		.slide {
			*, & {
				@extend %transition;
			}
		}
	}





	// just the text slider
	.textslider {
		position: relative;
		.slide.slick-slide {
			&:not(.slick-center) {
				> div {
					display: none;
				}
			}
			&.slick-center {
				> div {
					width: 150%;
					margin-left: -$margin_2x;
				}
			}
		}
	}

	// just the images slider
	.imageslider {
		
		.slick-list {
			padding: 10% 0 !important;
			.slide {
				margin: 0 $base-margin 0 0;
				.bgimage {
					@include boxshadow(1);
					opacity: 1;
					width: 100%;
					height: 100%;
					position: absolute;
					top: 0;
					left: 0;
				}
				.bgimage--container {
					@include aspect-ratio(16, 9);
				}
			}
		}

		.slide.slick-slide {
			&.slick-center {
				position: relative;
				z-index: 99;
				.bgimage--container {
					transform: scale(2) translate3d(0, 0, 0);
				}
			}

			&:not(.slick-center) {
				> a {
					pointer-events: none;
				}

				.bgimage {
					opacity: 0.25;
				}
			}
		}
	}



	.nu__carousel-buttons {
		display: flex;
		flex-flow: row nowrap;
		align-items: center;
		position: absolute;
		top: 0;
		right: 0;
		margin-right: 72.5%;
		button {
			// ? style the button with border and shadow
			cursor: pointer;
			border: 1px solid rgba($black, 1);
			color: rgba($black, 1);
			background-color: rgba($white, 1);
			@include boxshadow(2);

			// ? square and center the button and icon
			margin: 0 $base-margin 0 0;
			&:last-child {
				margin: 0;
			}
			padding: 0;
			border-radius: 100%;
			overflow: hidden;
			position: relative;
			width: 34px;
			height: 34px;
			display: flex;
			align-items: center;
			justify-content: center;
			transition: all 0.1s ease-in-out;
			&:hover,
			&:focus,
			&:active {
				border-color: rgba($red, 1);
				span {
					color: rgba($red, 1);
				}
			}
		}
	}

	
	
}
