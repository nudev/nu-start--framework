/**
*		styling all contents of site header
*/

header.header {
    // ? sticky header floats over all content with lightest shadow
    background-color: rgba($white, 1);
    @include boxshadow(1);
    display: block;
    position: fixed;
    z-index: 999;
    width: 100%;


    // ? utility nav is an extra nav menu bar within the header element before the container
    .utilitynav {
		position: relative;	
        display: flex;
		justify-content: flex-end;
        margin: 0;
        height: $utilityNavHeight;
        text-align: right;
        z-index: 999;
        border-bottom: 1px solid $grey_4;
        padding: 0 $margin_4x;
        @media screen and (max-width: 960px) {
            padding: 0 $base-margin;
			align-items: center;
			justify-content: flex-start;
        }
		ul {
			display: flex;
			flex-flow: row nowrap;
			justify-content: flex-end;
		}
		// ? hack disable just for now
		ul.sub-menu {
			z-index: 999;
		}
		li {
			text-align: center;
		}
		.button {
			a {
				@extend %nu__buttonstyle;
				margin: 0;
				font-size: 0.875rem;
				letter-spacing: 0;
				padding: 5px 10px;
			}
		}
    }

    // ? the container for the core header content
    > .container {
        position: relative;
        height: $headerHeight;
        display: flex;
        flex-flow: row nowrap;
        align-items: center;
        justify-content: space-between;
        margin: 0 $margin_4x;
        @media screen and (max-width: 960px) {
            margin: 0 $base-margin;
        }
    }
}

.site-search-icon {
    line-height: 1.375;
	color: $grey_8;
}

.itsglobalheader--container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 9999;
    #itsglobalheader {
        a {
            //
        }
    }
}

//
// *			Header Navigation Styling
//
// ? styles for the <header> must be placed in header.scss NOT this file
header.header {
    ul,
    ol {
        list-style-type: none;
        margin: 0;
        padding: 0;
    }

    // * top-level <li> fill the height of the header
    .navlinks,
    .navlinks > ul,
    .navlinks > ul > li {
        height: 100%;
    }

    // * mobile navicons hidden by default
    .navicons {
        display: none;
        margin-right: $margin_2x;
		cursor: pointer;
    }

    // * setup some defaults for the nav menu
    .navlinks {
        > ul {
            // ? A/R
            @media screen and (min-width: 961px) {
                > li {
                    margin: 0 0 0 $base-margin;

                    &:first-of-type {
                        margin: 0 0 0 0;
                    }

                    > a {
                        // top-level <li> text is centered vertically
                        > span {
                            position: relative;
                            top: 50%;
                            transform: translateY(-50%);
                        }
                    }

                    > .sub-menu {
                        top: 90%;
                        top: 100%;
                    }
                }
            }
        }

        // * generic styling for any sub-menu
        .sub-menu {
            display: flex;
            flex-flow: column nowrap;
            position: absolute;
            top: 100%;
            right: 0;
            background-color: rgba($white, 1);
            @include boxshadow(1);
            min-width: 220px;

            // nested submenus always fly out to the left
            .sub-menu {
                top: 0;
                left: 0;
                transform: translateX(-100%);
            }
			li {
				flex: 1 1 auto;
			}
        }

        // generic styles for basic elements
        a {
            display: block;
            margin: 0 0 0 0;
            height: 100%;
            padding: 5px;
            border-bottom: none 0;

            // style link text and underline effect
            > span {
				font-size: 0.875rem;
                display: inline-block;
                letter-spacing: 0;
                @include accentUnderline();
            }

            &:hover,
            &:focus,
            &:active {
                border-bottom: none 0;

                > span:before {
                    width: 100%; // underline any item on hover
                }
            }
        }

        // conditional classes for line items
        li {
			word-break: break-word;

            &.menu-item-has-children {
                position: relative; // sub-menus align to their parent

                .sub-menu {
                    display: none;

                    a {
                        padding: $base-margin;
                    }
                }

                > a {
                    > span {
                        position: relative;
                        @include nu_micon("\e5cf", after);
                        padding-right: $margin_2x;

                        &:after {
                            position: absolute;
                            top: 50%;
                            right: 0;
                            transform: translateY(-50%) rotate(0);
                            transition: transform 0.33s ease;
							font-size: 20px;
							color: $grey_7;
                        }
                    }
                }

                &:hover,
                &:focus,
                &:active {
                    > a {
                        > span {
                            &:after {
                                transform: translateY(-50%) rotate(90deg);
                                color: currentColor;
                            }
                        }
                    }

                    @media screen and (min-width: 961px) {
                        > .sub-menu {
                            display: flex;
                        }
                    }
                }
            }

            // underline active pages and parents of active pages
            &.current-menu-item,
            &.current-page-ancestor,
            &.current-menu-ancestor,
            &.current-menu-parent {
                > a > span:before {
                    width: 100%;
                }
            }
        }
    }

    @media screen and (max-width: 1024px) {
        // position: relative;

        // revealed / hidden navicons
        .navicons {
            display: block;

            span.menu {
                display: block;
            }

            span.close {
                display: none;
            }

            &.revealed {
                span.close {
                    display: block;
                }

                span.menu {
                    display: none;
                }
            }
        }

        // mobile nav changes
        .navlinks {
            @include boxshadow(1);
            height: auto;
            position: absolute;
            top: 100%;
            left: 0;
            width: 100%;

            @media screen and (max-width: 960px) {
                background-color: rgba($white, 1);
            }

            ul {
                display: none;
                flex-flow: column nowrap; // force 1 column

                li {
                    > a {
                        padding: $base-margin; // accordion style padding/margin for line items
                    }
                }
            }

            // the mobile nav is revealed
            &.revealed {
                > ul {
                    display: flex;
                }
            }

            li.menu-item-has-children {
                // transition: background-color 0.3s ease;
                .sub-menu {
                    box-shadow: none;

                    > li {
                        padding: 0 0 0 $base-margin;
                    }
                }

                &.revealed {
                    background-color: rgba($grey_4, 1);

                    > a > span:before {
                        width: 100%;
                    }

                    > .sub-menu {
                        display: flex;
                        top: 0;
                        right: 0;
                        position: relative;
                    }
                }
            }
        }
    }
}



// ? conditional body classes for <main> header offset
body {
    &.admin-bar {
        // wp admin bar core breakpoint for tablet
        @media screen and (max-width: 782px) {
        }

        // wp admin bar core breakpoint for phone
        @media screen and (max-width: 600px) {
			#wpadminbar {
				position: fixed;
				top: 0;
				left: 0;
				z-index: 999;
			}
        }
    }

    &.has-utility-nav {
        // ? main must be offset by the increased header height
        > main {
            margin-top: ($headerHeight + $utilityNavHeight);
        }
    }

    &.has-nu-global-header-footer {
        // ? site header must be offset by the itsHeader
        header.header {
            margin-top: $globalHeaderHeight;
        }
        // ? main must be offset by the itsHeader
        > main {
            // margin-top: ($headerHeight + $globalHeaderHeight);
            margin-top: $globalHeaderHeight;
        }

        // ? itsHeader must be offset by the admin bar
        &.admin-bar {
            .itsglobalheader--container {
                margin-top: $adminBarHeight;
            }
			
			// wp admin bar core breakpoint for phone
			@media screen and (max-width: 600px) {
				.itsglobalheader--container {
					margin-top: 46px;
				}
			}
        }

		
        // ? main must be offset by the itsHeader
        // ? main must be offset by the increased header height
        &.has-local-header {
            > main {
                margin-top: (
                    $headerHeight + $globalHeaderHeight
                );
            }
			&.has-utility-nav {
				> main {
					margin-top: (
						$headerHeight + $globalHeaderHeight + $utilityNavHeight
					);
				}
			}
        }
    }
}
