/* 
?  		typography only, not layout
?		
*/

// reset body styling to brand
body {
	@extend %base_body_style;
	position: relative;
	z-index: 1;
}

// set the RFS (max) font size, and scale it up for display style
h1 {
	$fz: 48px;
	@include font-size($fz);
}

h2 {
	$fz: 36px;
	@include font-size($fz);
}

h3 {
	$fz: 30px;
	@include font-size($fz);
}

h4 {
	$fz: 20px;
	@include font-size($fz);
}

h5 {
	$fz: 16px;
	@include font-size($fz);
}

h6 {
	text-transform: uppercase;
	$fz: 16px;
	@include font-size($fz);
	font-weight: bold;
}

// ? links need to be styled to our brand
// ? just the base level, no layout or modifiers
a {
	color: currentColor;
	font-weight: normal;
	text-decoration: none;
	// border-bottom: 2px solid transparent;
	@extend %transition;
	&:hover,
	&:focus,
	&:active {
		text-decoration: none;
		// border-bottom: 2px solid currentColor;
	}
	svg {
		@extend %transition;
	}
}

// ? note; RFS will auto-convert these to REM (16px === 1rem && 36px === 2rem)
// ? this overrides the wordpress variables attached to the body
body {
	@include rfs(128px, --wp--preset--font-size--128-128);
	@include rfs(96px, --wp--preset--font-size--96-96);
	@include rfs(72px, --wp--preset--font-size--72-72);
	@include rfs(60px, --wp--preset--font-size--60-60);
	@include rfs(48px, --wp--preset--font-size--48-48);
	@include rfs(36px, --wp--preset--font-size--36-40);
	@include rfs(30px, --wp--preset--font-size--30-36);
	@include rfs(24px, --wp--preset--font-size--24-32);
	@include rfs(20px, --wp--preset--font-size--20-28);
	@include rfs(18px, --wp--preset--font-size--18-28);
	@include rfs(16px, --wp--preset--font-size--16-24);
	@include rfs(14px, --wp--preset--font-size--14-20);
	@include rfs(12px, --wp--preset--font-size--12-16);

	.has-12-16-font-size {
		@include rfs(16px, line-height);
	}
	.has-14-20-font-size {
		@include rfs(20px, line-height);
	}
	.has-16-24-font-size {
		@include rfs(24px, line-height);
	}
	.has-18-28-font-size {
		@include rfs(28px, line-height);
	}
	.has-20-28-font-size {
		@include rfs(28px, line-height);
	}
	.has-24-32-font-size {
		@include rfs(32px, line-height);
	}
	.has-30-36-font-size {
		@include rfs(36px, line-height);
	}
	.has-36-40-font-size {
		@include rfs(40px, line-height);
	}

	.has-48-48-font-size,
	.has-60-60-font-size,
	.has-72-72-font-size,
	.has-96-96-font-size,
	.has-128-128-font-size {
		line-height: 1;
	}
}

p {
	margin: $base-margin 0 $half-margin 0;
}

// deal with issues having the inline text not class the anchor tag; instead creating and tagging a child span
p > a {
	> span.has-inline-color {
		border-bottom: 2px solid transparent;
	}
	&:hover,
	&:focus {
		border-bottom: 2px solid transparent;
		> span.has-inline-color {
			border-bottom: 2px solid currentColor;
		}
	}
}

// *			Pagination
.pagination {
	text-align: center;
	margin: 0 auto $margin_2x auto;

	// some harder resets for these elements
	a.page-numbers,
	span.page-numbers {
		display: block;
		background: none;
		padding: 0 0 0 0;
		margin: 0 0 0 0;
		border: none 0;
		@extend %transition;
		font-weight: normal;
		width: 24px;
		height: 24px;
		line-height: 1;
		border-radius: 50%;
		border: 2px solid rgba($black, 0);
		color: rgba($black, 0.9);
		// ? a custom <span> wrapper is around both the prev/next and numbers
		position: relative;
		> span {
			@include font-size(0.875rem);
			line-height: 1;
			@extend %absolutely_centered;
		}
		&.next,
		&.prev {
			border: 2px solid rgba($black, 0);
			> span {
				display: none;
			}
			@include nu_micon("\e5cb", after);
			&.next:after {
				content: "\e5cc";
			}
			&:after {
				line-height: 1;
				@extend %absolutely_centered;
			}
		}

		&.current {
			border: 2px solid rgba($black, 1);
			background-color: black;
			color: white;
		}
	}

	> ul.page-numbers {
		display: flex;
		flex-flow: row nowrap;
		justify-content: center;
		align-items: center;
		list-style-type: none;
		padding: 0;

		> li {
			margin: 0 ($base-margin * 0.5) 0 0;
			&:last-child {
				margin: 0;
			}

			> a {
				&:hover,
				&:focus,
				&:active {
					color: rgba($black, 0.8);
					border-color: rgba($black, 0.8);
					&.next,
					&.prev {
						border: 2px solid rgba($black, 0);
					}
				}
			}
		}
	}

	&:last-of-type {
		margin: $margin_4x auto 0 auto;
	}
}
