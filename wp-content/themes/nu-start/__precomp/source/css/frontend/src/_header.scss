/*


*/

// ? styles for all screen sizes
header.header {
	#skiptomaincontent {
		background: var(--wp--preset--color--white-2);
		height: 30px;
		top: 0;
		left: 0;
		padding: 8px;
		position: absolute;
		transform: translateY(-100%);
		transition: transform 0.3s;
		&:focus {
			transform: translateY(0%);
		}
	}
	@mixin nav_item_is_active {
		opacity: 1;
		background-color: var(--wp--preset--color--white-2);
		> span {
			&:before {
				width: 100%;
			}
		}
	}

	ul,
	ol {
		list-style-type: none;
		margin: 0;
		padding: 0;
	}

	// ? stick to the top of the viewport at all times
	display: block;
	position: fixed;
	z-index: 999;
	width: 100%;

	.sub-menu,
	.navlinks,
	& {
		background-color: var(--wp--preset--color--white-1);
	}

	// ? style with box shadow to show elevation
	@include nu__boxshadow(2);

	.navlinks a {
		@extend %transition;
		opacity: 0.8;
		display: block;
		letter-spacing: 0.66px;
		font-weight: 400;
		font-size: var(--wp--preset--font-size--14-20);
		padding: $half-margin $base-margin;
		color: var(--wp--preset--color--black-2);
		> span {
			display: inline-block;
		}
		&:hover,
		&:focus {
			@include nav_item_is_active();
		}
	}

	.site-search-icon {
		line-height: 1.5;
		color: var(--wp--preset--color--black-2);
	}

	// ? navlinks styling at any screen size
	.navlinks {
		background-color: var(--wp--preset--color--white-1);

		.menu-item {
			> a {
				span {
					@include accentUnderline();
				}
			}
		}

		li {
			&.current-menu-item,
			&.current_page_ancestor {
				> a {
					opacity: 1;
					span:before {
						width: $base-margin;
					}
				}
			}

			&.menu-item-has-children {
				// sub menus positioned from their parent
				position: relative;

				// initially hidden sub menus
				.sub-menu {
					display: none;
				}

				// parent item link has chevron
				> a {
					> span {
						padding-right: $half-margin;
						@include nu_micon("\e5cf", after);
						&:after {
							position: absolute;
							top: 50%;
							right: -$half-margin;
							line-height: 1;
							transform: translateY(-50%) rotate(0deg);
							@extend %transition;
							font-size: 18px;
						}
					}
				}
				// * hover to reveal sub-menus (allow clicking parent to nav to that location)
				&:hover,
				&:focus {
					> a > span {
						&::after {
							transform: translateY(-50%) rotate(90deg);
						}
					}
				}
			}
		}
	}

	// * mobile navicons hidden by default
	.navicons {
		display: none;
		cursor: pointer;
	}

	// ? content container to match width with content/blocks on the page
	> .container {
		position: relative;
		display: flex;
		flex-flow: row nowrap;
		justify-content: space-between;
		align-items: center;
		max-width: 100%;
		height: $headerHeight;
	}

	.utilitynav {
		position: relative;
		display: flex;
		justify-content: flex-end;
		margin: 0;
		height: $utilityNavHeight;
		text-align: right;
		z-index: 999;
		border-bottom: 1px solid var(--wp--preset--color--black-3);
		padding: 0 $margin_4x;
		@media screen and (max-width: 960px) {
			padding: 0 $base-margin;
			align-items: center;
			justify-content: flex-start;
		}
		ul.navlinks {
			display: flex;
			flex-flow: row nowrap;
			justify-content: flex-end;
		}
		// ? hack disable just for now
		ul.sub-menu {
			z-index: 999;
		}
		li {
			text-align: center;
		}
		.button {
			a {
				@extend %nu__buttonstyle;
				margin: 0;
				font-size: 0.875rem;
				letter-spacing: 0;
				padding: 5px 10px;
			}
		}
	}
}

// *
// *
// *
// *
// *
// *
// *
// *
// *
// *
// *	 			DESKTOP NAV
// *	 			DESKTOP NAV
// *	 			DESKTOP NAV
// *
// *
// *
// *
// *
// *
// *
// *
// *
// *
// *
@include media(">medium") {
	header.header {
		// ? content container to match width with content/blocks on the page
		> .container {
			margin: 0 $margin_4x;
		}

		.navlinks .menu-item {
			&:hover,
			&:focus {
				> .sub-menu {
					display: flex;
				}
			}
		}

		.navlinks {
			// * in desktop view; top-level nav items underline is at the bottom of the header; not under the text
			> .menu > .menu-item {
				// * generic styling for any sub-menu
				.sub-menu {
					flex-flow: column nowrap;
					position: absolute;
					top: 100%;
					right: 0;
					@include nu__boxshadow(2);
					min-width: 220px;
					li {
						flex: 1 1 auto;
					}
				}

				> .sub-menu {
					top: 90%;
					top: 100%;
					.sub-menu {
						top: 0;
						left: 0;
						transform: translateX(-100%);
					}
				}
				> a {
					padding: 2px $base-margin;
					height: $headerHeight;
					@include accentUnderline();
					// underline flyout from the right
					&:before {
						bottom: 0;
						left: auto;
						right: 0;
					}

					&:hover,
					&:focus {
						background-color: initial;
						&:before {
							width: 100%;
						}
					}
					// ? vertically center the text inside the click area
					span {
						position: relative;
						top: 50%;
						transform: translateY(-50%);
						&:after {
							right: -$base-margin;
						}
						&:before {
							display: none;
						}
					}
				}
				&.current-menu-item,
				&.current-page-ancestor,
				&.current-menu-ancestor,
				&.current-menu-parent {
					> a:before {
						width: 100%;
					}
				}
			}
		}

		.utilitynav .navlinks {
			display: flex;
			flex-flow: row nowrap;
			align-items: center;
			> .menu {
				> .menu-item {
					> a {
						height: auto;
						> span {
							top: 0;
							transform: none;
						}
					}
				}
			}
		}
	}
}

// *
// *
// *
// *
// *
// *
// *
// *
// *	 MOBILE NAV
// *	 MOBILE NAV
// *	 MOBILE NAV
// *
// *
// *
// *
// *
// *
// *
@include media("<=medium") {
	header.header {
		// ? content container to match width with content/blocks on the page
		> .container {
			margin: 0 $margin_2x;
		}

		// position: relative;

		// revealed / hidden navicons
		.navicons {
			display: block;

			span.menu {
				display: block;
			}

			span.close {
				display: none;
			}

			&.revealed {
				span.close {
					display: block;
				}

				span.menu {
					display: none;
				}
			}
		}

		.navlinks,
		.sub-menu {
			flex-flow: column nowrap;
		}

		// mobile nav changes
		.navlinks {
			@include nu__boxshadow(2);
			height: auto;
			position: absolute;
			top: 100%;
			left: 0;
			width: 100%;
			max-height: calc(100vh - $globalHeaderHeight - $headerHeight);
			overflow: hidden;
			overflow-y: auto;
			&.revealed {
				> ul {
					height: auto;
					//
					> li {
						margin: 0;
					}
				}
			}

			> .menu {
				display: none;
				flex-flow: column nowrap; // force 1 column
			}

			// the mobile nav is revealed
			&.revealed {
				> ul {
					display: flex;
				}
			}

			li.menu-item-has-children {
				// transition: background-color 0.3s ease;
				.sub-menu {
					box-shadow: none;
					> li {
						padding-left: $base-margin;
					}
				}

				&.revealed {
					background-color: rgba(
						var(--wp--preset--color--black-3),
						1
					);

					> a > span:before {
						width: 100%;
					}

					> .sub-menu {
						display: flex;
						top: 0;
						position: relative;
					}
				}
			}
		}
	}
}

// ? conditional body classes for <main> header offset
body {
	&.admin-bar {
		// wp admin bar core breakpoint for tablet
		@media screen and (max-width: 782px) {
		}

		// wp admin bar core breakpoint for phone
		@media screen and (max-width: 600px) {
			#wpadminbar {
				position: fixed;
				top: 0;
				left: 0;
				z-index: 9999;
			}
		}
	}

	&.has-utility-nav {
		// ? main must be offset by the increased header height
		> main {
			margin-top: ($headerHeight + $utilityNavHeight);
		}
	}

	&.has-nu-global-header-footer {
		// ? site header must be offset by the itsHeader
		header.header {
			margin-top: $globalHeaderHeight;
		}
		// ? main must be offset by the itsHeader
		> main {
			// margin-top: ($headerHeight + $globalHeaderHeight);
			margin-top: $globalHeaderHeight;
		}

		// ? itsHeader must be offset by the admin bar
		&.admin-bar {
			.itsglobalheader--container {
				margin-top: $adminBarHeight;
			}

			// wp admin bar core breakpoint for phone
			@media screen and (max-width: 600px) {
				.itsglobalheader--container {
					margin-top: 46px;
				}
			}
		}

		// ? main must be offset by the itsHeader
		// ? main must be offset by the increased header height
		&.has-local-header {
			> main {
				margin-top: ($headerHeight + $globalHeaderHeight);
			}
			&.has-utility-nav {
				> main {
					margin-top: (
						$headerHeight + $globalHeaderHeight + $utilityNavHeight
					);
				}
			}
		}
	}
}
